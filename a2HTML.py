import sys
import requests
import re

def get_HTML_lines(html_page):
    http_object = requests.get(html_page)
    raw_html = http_object.content
    print(raw_html)
    raw_string = raw_html.decode('utf-8')
    print(raw_string)
    return raw_string

def extract_heading(raw_string):
    # this pattern matches any characters between tags beginning with a "h" to find HTML headings
    pattern = re.compile("<h.*>(.*?)</h.*>")
    # finds any results matching the pattern and returns it as a list
    head = re.findall(pattern, raw_string)
    print(head)
    return head[0]

def extract_table(raw_string):
    # calls on function extract_rows to get content between <tr> tags
    raw_table_rows = extract_rows(raw_string)
    # calls on function extract_cells to get content between <td> tags
    # the content will be stored as a nested list, with each item (representing rows) containing a list of table cells
    table_cells = extract_cells(raw_table_rows)
    return table_cells

def extract_rows(raw_string):
    # this table row pattern matches any characters between tags labelled <tr> to extract table rows
    # (re.DOTALL matches any character, including newline)
    pattern = re.compile("<tr>(.*?)</tr>", re.DOTALL)
    # finds any results matching the table row pattern and returns it as a list
    raw_table_rows = re.findall(pattern, raw_string)
    return raw_table_rows

def extract_cells(raw_table_rows):
    # this pattern matches any characters between tags labelled <td> to extract table cells within each row
    pattern = re.compile("<td>(.*?)</td>")
    table_rows = []
    # extracts content of each table cell by row and stores it in a list
    for row in raw_table_rows:
        table_cell = re.findall(pattern, row)
        table_rows.append(table_cell)
    return table_rows

def write_out_py_file(html_page, HEADING_assignment, TABLE_assignment):
    pattern = re.compile("1340/(.*?).html")
    file_name = re.findall(pattern, html_page)
    print(file_name[0])

    INDENT = "    "
    py_file = open(file_name[0] + ".py", "w")
    py_file.write("""# helloWorld.py # (This file was generated by a2HTML.py) # v0.0.0 \nif  __name__ == "__main__": """)
    py_file.write("\n" + INDENT + "heading = " + repr(HEADING_assignment))
    py_file.write("\n" + INDENT + "print(heading)")
    py_file.write("\n" + INDENT + "list = " + repr(TABLE_assignment))
    py_file.write("""    
    for i in range(len(list)):
        for x in range(len(list[i])):
            print(list[i][x], end= " ")
        print("")""" )

    py_file.close()

if __name__ == "__main__":
    html_page = sys.argv[1]
    print("The filename is ", html_page)
    raw_string = get_HTML_lines(html_page)
    HEADING_assignment = extract_heading(raw_string)
    TABLE_assignment = extract_table(raw_string)
    print(TABLE_assignment)
    write_out_py_file(html_page, HEADING_assignment, TABLE_assignment)


